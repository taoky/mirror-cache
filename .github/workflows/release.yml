name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          profile: minimal
          override: true
      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
        node-version: [15.x]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      # cache cargo dependencies
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Cargo Test
        run: |
          make test
      - name: mirror test
        run: |
          npm install -g zx
          make redis
          cargo run &
          sleep 3
          make scenario_test
          kill %1
          make redis_stop

  github-release:
    name: GitHub Releases
    runs-on: ubuntu-latest
    needs: [style, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cargo Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "target/release/mirror-cache"
          token: ${{ secrets.GITHUB_TOKEN }}

  docker-release:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: [style, test]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: seanchao/mirror-cache

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  crates-release:
    name: Publish on crates.io
    runs-on: ubuntu-latest
    needs: [style, test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
